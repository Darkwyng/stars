<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pim.stars</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<!-- This is the Java version that is used. -->
		<maven.compiler.release>12</maven.compiler.release>

		<spring.boot.version>2.2.2.RELEASE</spring.boot.version>
		<junit.version>5.6.0-M1</junit.version>
		<mockito.version>3.2.4</mockito.version>
		<lombok.version>1.18.10</lombok.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<modules>
		<module>base</module>
		<module>addons</module>
		<module>integrationtests</module>
		<module>test.coverage</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.pim.stars</groupId>
				<artifactId>base</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.pim.stars</groupId>
				<artifactId>addons</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.pim.stars</groupId>
				<artifactId>integrationtests</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<!-- Outdated versions are excluded here, so that more recent ones can be used. -->
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-library</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<!-- This dependency comes with the above BOM already, but it is listed here explicitly, so that JUnit 4 can be excluded 
					and so that Mockito can be used in a more recent version. -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-junit-jupiter</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>29.0-jre</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Lombok is used with the provided scope, because it is only used in the build -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- These dependencies can be accessed by the modules directly without listing them again. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- This plugin can be used to create an executable fat jar of a spring boot service. -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>

				<plugin>
					<!--This plugin defines the Java version that is used. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<release>${maven.compiler.release}</release>
					</configuration>
				</plugin>

				<!-- Define versions of plugins explicitly, to shut up the goal display-dependency-updates. -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>

				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>

				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.8.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M3</version>
				</plugin>

				<!-- Define versions of plugins explicitly, to shut up maven-enforcer-plugin validating. -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>

				<plugin>
					<!-- This plugin helps finding the latest plugin or dependency versions for your modules -->
					<!-- by executing 'mvn versions:display-plugin-updates' -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>

				<plugin>
					<!-- This plugin will check the rules listed below when 'mvn validate' is executed. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<phase>validate</phase>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<!-- Make sure that Maven is used in at least this version. -->
									<requireMavenVersion>
										<version>3.6.1</version>
									</requireMavenVersion>
									<!-- Make sure that dependency version numbers converge. -->
									<dependencyConvergence />
									<banDuplicatePomDependencyVersions />
									<!-- Make sure that all plugins have versions defined. -->
									<requirePluginVersions>
										<banLatest>true</banLatest>
										<banRelease>false</banRelease>
										<banSnapshots>true</banSnapshots>
									</requirePluginVersions>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- This plugin will calculate the test coverage when 'mvn test' is executed. -->
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.4</version>

					<executions>
						<!-- This modifies the command line arguments for the test execution, so that test coverage is tracked. -->
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>

						<!-- The report is created at the end of the test phase. -->
						<execution>
							<id>jacoco-report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>

						<!-- The reports will be aggregated by the module test.coverage. -->
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>

		<!-- This activates the plugin in the modules, so that they create reports during their test phase. -->
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>